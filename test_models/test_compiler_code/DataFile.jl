# ------------------------------------------------------------------------------------- #
# Copyright (c) 2015 Varnerlab,
# School of Chemical and Biomolecular Engineering,
# Cornell University, Ithaca NY 14853 USA.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# DataFile.jl
# Creates a data dictionary holding initial conditions, and the kinetic/control
# parameters for the model. Called by SolveBalanceEquations.jl
#
# Generated on: 8/6/2015
# Generated by: jeffreyvarner
# ------------------------------------------------------------------------------------- #
function DataFile(TSTART,TSTOP,Ts,INDEX)

	# Set the initial condition -
	IC_ARRAY = Float64[]
	push!(IC_ARRAY,1.0)	#	1	G_P_1
	push!(IC_ARRAY,1.0)	#	2	G_P_3
	push!(IC_ARRAY,1.0)	#	3	G_P_2
	push!(IC_ARRAY,1.0)	#	4	G_P_4
	push!(IC_ARRAY,0.0)	#	5	MRNA_P_1
	push!(IC_ARRAY,0.0)	#	6	MRNA_P_3
	push!(IC_ARRAY,0.0)	#	7	MRNA_P_2
	push!(IC_ARRAY,0.0)	#	8	MRNA_P_4
	push!(IC_ARRAY,0.0)	#	9	P_1
	push!(IC_ARRAY,0.0)	#	10	P_3
	push!(IC_ARRAY,0.0)	#	11	P_2
	push!(IC_ARRAY,0.0)	#	12	P_4
	push!(IC_ARRAY,0.0)	#	13	M_1
	push!(IC_ARRAY,0.0)	#	14	M_2
	push!(IC_ARRAY,0.0)	#	15	M_3

	# Setup the gene expression kinetic parameter vector -
	GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR = Float64[]
	push!(GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR,1.0)	#	1	Transcription constant MRNA_P_2
	push!(GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR,0.001)	#	2	Basal expression constant MRNA_P_2
	push!(GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR,0.1)	#	3	Degradation constant MRNA_P_2
	push!(GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR,1.0)	#	4	Transcription constant MRNA_P_4
	push!(GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR,0.001)	#	5	Basal expression constant MRNA_P_4
	push!(GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR,0.1)	#	6	Degradation constant MRNA_P_4
	push!(GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR,1.0)	#	7	Transcription constant MRNA_P_3
	push!(GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR,0.001)	#	8	Basal expression constant MRNA_P_3
	push!(GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR,0.1)	#	9	Degradation constant MRNA_P_3
	push!(GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR,10.0)	#	10	Translation constant P_2
	push!(GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR,0.01)	#	11	Degradation constant P_2
	push!(GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR,10.0)	#	12	Translation constant P_4
	push!(GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR,0.01)	#	13	Degradation constant P_4
	push!(GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR,10.0)	#	14	Translation constant P_3
	push!(GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR,0.01)	#	15	Degradation constant P_3

	# Setup the metabolic kinetic parameter vector -
	METABOLIC_KINETIC_PARAMETER_VECTOR = Float64[]
	push!(METABOLIC_KINETIC_PARAMETER_VECTOR,0.1)	#	1	k_1_P_4
	push!(METABOLIC_KINETIC_PARAMETER_VECTOR,1.0)	#	2	K_1_M_2
	push!(METABOLIC_KINETIC_PARAMETER_VECTOR,1.0)	#	3	K_1_M_1
	push!(METABOLIC_KINETIC_PARAMETER_VECTOR,0.1)	#	4	k_2_P_3
	push!(METABOLIC_KINETIC_PARAMETER_VECTOR,1.0)	#	5	K_2_M_2
	push!(METABOLIC_KINETIC_PARAMETER_VECTOR,1.0)	#	6	K_2_M_1

	# Setup the gene expression control parameter vector -
	GENE_EXPRESSION_CONTROL_PARAMETER_VECTOR = Float64[]
	push!(GENE_EXPRESSION_CONTROL_PARAMETER_VECTOR,0.1)	#	1	 Gain -> Actor: P_1*P_3 -> P_2
	push!(GENE_EXPRESSION_CONTROL_PARAMETER_VECTOR,1.0)	#	2	 Order -> Actor: P_1*P_3 -> P_2
	push!(GENE_EXPRESSION_CONTROL_PARAMETER_VECTOR,0.1)	#	3	 Gain -> Actor: P_1*P_3 -> P_4
	push!(GENE_EXPRESSION_CONTROL_PARAMETER_VECTOR,1.0)	#	4	 Order -> Actor: P_1*P_3 -> P_4
	push!(GENE_EXPRESSION_CONTROL_PARAMETER_VECTOR,0.1)	#	5	 Gain -> Actor: P_2 -> P_3
	push!(GENE_EXPRESSION_CONTROL_PARAMETER_VECTOR,1.0)	#	6	 Order -> Actor: P_2 -> P_3

	# Setup the metabolic control parameter vector -
	METABOLIC_CONTROL_PARAMETER_VECTOR = Float64[]
	push!(METABOLIC_CONTROL_PARAMETER_VECTOR,0.1)	#1	OR: Gain -> Actor: M_3 -> P_1	Inhibit
	push!(METABOLIC_CONTROL_PARAMETER_VECTOR,1.0)	#2	OR: Order -> Actor: M_3 -> P_1	Inhibit
	push!(METABOLIC_CONTROL_PARAMETER_VECTOR,0.1)	#3	AND: Gain -> Actor: M_1*M_2 -> P_1	Acrivate
	push!(METABOLIC_CONTROL_PARAMETER_VECTOR,1.0)	#4	AND: Order -> Actor: M_1*M_2 -> P_1	Acrivate
	push!(METABOLIC_CONTROL_PARAMETER_VECTOR,0.1)	#5	OR: Gain -> Actor: M_3 -> P_2	Inhibit
	push!(METABOLIC_CONTROL_PARAMETER_VECTOR,1.0)	#6	OR: Order -> Actor: M_3 -> P_2	Inhibit
	push!(METABOLIC_CONTROL_PARAMETER_VECTOR,0.1)	#7	AND: Gain -> Actor: M_1*M_2 -> P_2	Acrivate
	push!(METABOLIC_CONTROL_PARAMETER_VECTOR,1.0)	#8	AND: Order -> Actor: M_1*M_2 -> P_2	Acrivate

	# Setup the system transfer parameter vector -
	SYSTEM_TRANSFER_PARAMETER_ARRAY = zeros(Float64,(15,2));
	SYSTEM_TRANSFER_PARAMETER_ARRAY[9,1] = 1.0;	#9	P_1 transfer FROM SYSTEM
	SYSTEM_TRANSFER_PARAMETER_ARRAY[9,2] = 0.1;	#9	P_1 transfer TO SYSTEM
	SYSTEM_TRANSFER_PARAMETER_ARRAY[10,1] = 1.0;	#10	P_3 transfer FROM SYSTEM
	SYSTEM_TRANSFER_PARAMETER_ARRAY[13,1] = 1.0;	#13	M_1 transfer FROM SYSTEM

	# - DO NOT EDIT BELOW THIS LINE ------------------------------
	data_dictionary = Dict()
	data_dictionary["GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR"] = GENE_EXPRESSION_KINETIC_PARAMETER_VECTOR
	data_dictionary["METABOLIC_KINETIC_PARAMETER_VECTOR"] = METABOLIC_KINETIC_PARAMETER_VECTOR
	data_dictionary["GENE_EXPRESSION_CONTROL_PARAMETER_VECTOR"] = GENE_EXPRESSION_CONTROL_PARAMETER_VECTOR
	data_dictionary["METABOLIC_CONTROL_PARAMETER_VECTOR"] = METABOLIC_CONTROL_PARAMETER_VECTOR
	data_dictionary["SYSTEM_TRANSFER_PARAMETER_ARRAY"] = SYSTEM_TRANSFER_PARAMETER_ARRAY
	data_dictionary["INITIAL_CONDITION_VECTOR"] = IC_ARRAY
	# - DO NOT EDIT ABOVE THIS LINE ------------------------------
	return data_dictionary
end
